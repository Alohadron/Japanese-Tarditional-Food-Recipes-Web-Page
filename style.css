/* ==========================================================================
   1) DESIGN SYSTEM — CSS VARIABLES (Semantic, scalable, theme-ready)
   --------------------------------------------------------------------------
   Change values here to theme the entire UI consistently.
   ========================================================================== */
:root {
  /* ——— Brand & Base Colors ——— */
  --color-bg-page: #000000;                         /* page backdrop base */
  --color-text-primary: #e6eef6;                    /* main text on dark bg */
  --color-text-contrast: #ffffff;                   /* high-contrast text */
  --color-accent: #ff7a59;                          /* key brand accent */
  --color-accent-soft: rgba(236, 111, 8, 0.8);      /* accent with alpha (subtitle/card bg) */

  /* ——— Surfaces ——— */
  --color-surface-card: rgba(236, 111, 8, 0.8);     /* card background overlay */
  --color-surface-modal: #553b36;                   /* modal background */
  --color-surface-thumb: #111111;                   /* image placeholder bg */

  /* ——— Overlays & Effects ——— */
  --overlay-bg: rgba(10, 12, 20, 0.45);             /* overlay veil tint */
  --overlay-blur: 8px;                               /* overlay blur intensity */
  --overlay-saturate: 110%;                          /* overlay color pop */
  --modal-radius: 12px;                              /* modal roundness */

  /* ——— Borders ——— */
  --border-card: rgba(255, 255, 255, 0.08);
  --border-modal: rgba(255, 255, 255, 0.06);
  --border-select: rgba(255, 255, 255, 0.3);
  --border-select-focus: var(--color-accent);

  /* ——— Typography ——— */
  --font-sans: 'Inter', system-ui, -apple-system, "Segoe UI", Roboto, "Helvetica Neue", Arial;
  --font-brand: 'Sawarabi Mincho', serif;

  /* ——— Shadows ——— */
  --shadow-card: 0 6px 20px rgba(0, 0, 0, 0.25);
  --shadow-card-hover-outer: 0 0 10px 2px rgba(255, 255, 255, 0.8);
  --shadow-card-hover-inner: 0 0 20px 4px rgba(255, 255, 255, 0.6);
  --shadow-modal: 0 24px 80px rgba(0, 0, 0, 0.6);
  --shadow-thumb: 0 2px 8px rgba(0, 0, 0, 0.08);
  --shadow-arrow-hover: 0 4px 16px rgba(0, 0, 0, 0.5);

  /* ——— Transitions ——— */
  --transition-fast: 0.15s ease;
  --transition-med: 0.25s ease;
  --transition-slow: 0.35s ease;

  /* ——— Layout & Spacing ——— */
  --gap: 12px;
  --card-radius: 10px;

  /* ——— Scroll Fades (driven by JS toggling opacities) ——— */
  --fade-size: 18px;
  --fade-top-opacity: 0;     /* JS toggles to 1 when not at top */
  --fade-bottom-opacity: 0;  /* JS toggles to 1 when not at bottom */

  /* ——— Links (locations) ——— */
  --color-link-website: #EFA8B8;  /* Sakura Pink */
  --color-link-map: #A3D5FF;      /* Water Blue */
  --color-link-hover: #ff8c00;    /* Kurenai Crimson */

  /* ——— Gradients / Fades ——— */
  --fade-dark-35: rgba(0, 0, 0, 0.35);

  /* ——— Language Select UI ——— */
  --select-bg: rgba(255, 255, 255, 0.15);
  --select-bg-hover: rgba(255, 255, 255, 0.3);
  --select-bg-focus: rgba(255, 255, 255, 0.4);

  /* ——— Subtitle pill ——— */
  --subtitle-bg: var(--color-accent-soft);
}

/* ==========================================================================
   2) GLOBAL RESETS & BASE STYLES
   --------------------------------------------------------------------------
   Keep resets minimal; rely on variables for theming and consistency.
   ========================================================================== */
* { box-sizing: border-box; }

body {
  margin: 0;
  padding: 0;
  background-image: url('patterns/pexels-dibert-2169222.jpg'); /* decorative: fixed hero backdrop */
  background-size: cover;
  background-position: center;
  background-attachment: fixed;
  background-repeat: no-repeat;
  font-family: var(--font-sans);
  color: var(--color-text-primary);
  background-color: var(--color-bg-page); /* solid fallback under image */
}

body.modal-open { overflow: hidden; }

/* ==========================================================================
   3) LAYOUT
   --------------------------------------------------------------------------
   Grid is simple and responsive; clamp() keeps paddings fluid.
   ========================================================================== */
.grid {
  display: grid;
  gap: var(--gap);
  grid-template-columns: repeat(3, 1fr);    /* desktop: dense gallery */
  align-items: stretch;                      /* match heights per row */
  padding: clamp(16px, 4vw, 48px);
  margin-left: auto;
  margin-right: auto;
  max-width: 1400px;
}

@media (max-width: 1200px) {
  .grid { grid-template-columns: repeat(2, 1fr); } /* tablets */
}

@media (max-width: 700px) {
  .grid { grid-template-columns: repeat(1, 1fr); } /* mobile */
}

/* ==========================================================================
   4) COMPONENTS
   ========================================================================== */

/* ——— 4.1 Language Switcher ———
   Compact, high-contrast control floating over the hero. */
.language-switcher {
  position: absolute;
  top: 20px;
  right: 20px;
}

#language-select {
  padding: 6px 12px;
  border-radius: 8px;
  border: 1px solid var(--border-select);
  background: var(--select-bg);
  backdrop-filter: blur(var(--overlay-blur)) saturate(140%);
  color: var(--color-text-contrast);
  font-size: 14px;
  font-family: var(--font-sans);
  cursor: pointer;
  outline: none;
  transition: background var(--transition-slow), border-color var(--transition-slow), transform var(--transition-fast);
}
#language-select:hover {
  background: var(--select-bg-hover);
  border-color: var(--color-text-contrast);
}
#language-select:focus {
  border-color: var(--border-select-focus);
  background: var(--select-bg-focus);
  transform: scale(1.03);
}
#language-select option {
  background-color: var(--color-text-contrast);
  color: #222; /* high-contrast on white options list; left literal as semantic var would reduce clarity here */
}

/* ——— 4.2 Header / Hero ———
   Large typographic lockup over the photographic background. */
h1, h2, .title {
  font-family: var(--font-brand);
  color: var(--color-text-contrast);
  letter-spacing: 1px;
}
h1 {
  font-size: clamp(48px, 6vw, 96px);
  letter-spacing: 3px;
}
.hero {
  text-align: center;
  padding: 40px 0 20px;
}
.subtitle {
  font-size: 16px;
  color: var(--color-text-contrast);
  margin-top: 8px;
  font-style: italic;
  background-color: var(--subtitle-bg);
  display: inline-block;
  padding: 4px 8px;
  border-radius: 4px;
  border-color: var(--color-text-contrast); /* visual note on hover glow */
  box-shadow: var(--shadow-card-hover-outer), var(--shadow-card-hover-inner);
}

/* ——— 4.3 Cards ———
   Media-first tiles with readable content and subtle elevation. */
.card {
  position: relative;
  border-radius: var(--card-radius);
  overflow: hidden;
  cursor: pointer;
  width: 100%;
  margin: 0 0 var(--gap);
  display: flex;
  flex-direction: column;   /* image over content stack */
  height: 100%;
  border: 1px solid var(--border-card);
  box-shadow: var(--shadow-card);
  background: var(--color-surface-card);
  background-blend-mode: overlay;
  transition: transform 0.18s ease, box-shadow 0.18s ease, border-color var(--transition-med);
}
.card:hover {
  transform: translateY(-3px);
  border-color: var(--color-text-contrast);
  box-shadow: var(--shadow-card-hover-outer), var(--shadow-card-hover-inner);
}
.thumb {
  width: 100%;
  aspect-ratio: 3 / 4;   /* taller editorial crops */
  overflow: hidden;
  background: var(--color-surface-thumb);
  border-radius: 4px;
  flex: 0 0 auto;
  box-shadow: var(--shadow-thumb);
}
.thumb img {
  width: 100%;
  height: 100%;
  object-fit: cover;
  display: block;
}

.card-info {
  display: flex;
  flex-direction: column;
  align-items: flex-start;
  padding: clamp(10px, 1.5vw, 16px);
  background: rgba(255, 255, 255, 0.02); /* ultra subtle overlay; keeping literal for minute transparency intent */
  min-height: 90px;
  flex: 1 1 auto;
  justify-content: flex-start;
}
.title {
  font-size: clamp(15px, 1.6vw, 20px);
  font-weight: 600;
  margin-bottom: 4px;
  color: floralwhite; /* visually intentional; can be converted if you want strict semantic palette */
}
.card-info .desc {
  font-size: clamp(12px, 1.1vw, 15px);
  color: #fcfcfc;          /* near-white for subtle contrast difference */
  margin-bottom: 6px;
  line-height: 1.4;
  text-align: left;
  display: block;
  overflow-wrap: anywhere; /* prevent long words from breaking layout */
}
.sub {
  font-size: clamp(10px, 1vw, 13px);
  color: #000;             /* black for contrast on warm surface */
  margin-top: 6px;
  white-space: normal;
  display: block;
}
html[lang="ru"] .sub { font-size: 11px; } /* accommodate longer words */

/* ——— 4.4 Modal Overlay ———
   Glassy overlay that gates background interactions. */
.modal-overlay {
  position: fixed;
  inset: 0;
  display: flex;
  align-items: center;
  justify-content: center;
  z-index: 999;
  padding: 20px;
  opacity: 0;
  pointer-events: none;
  transition: opacity var(--transition-slow);
  background: var(--overlay-bg);
  backdrop-filter: blur(var(--overlay-blur)) saturate(var(--overlay-saturate));
  -webkit-backdrop-filter: blur(var(--overlay-blur)) saturate(var(--overlay-saturate));
}
.modal-overlay.open {
  opacity: 1;
  pointer-events: auto;
}

/* ——— 4.5 Modal Container ———
   50/50 split layout; image on left, content on right. */
.modal {
  transform: scale(0.95);
  opacity: 0;
  transition: transform var(--transition-slow), opacity var(--transition-slow);
  width: 100%;
  max-width: min(960px, 90vw);
  max-height: 90vh;
  height: 90vh;                    /* ensures full modal height usage */
  background: var(--color-surface-modal);
  background-clip: border-box;     /* prevents gradient edge line */
  border-radius: var(--modal-radius);
  box-shadow: var(--shadow-modal);
  border: 1px solid var(--border-modal);
  overflow: hidden;                /* clean content clipping */
  display: flex;                   /* consistent 50/50 split */
}
.modal-overlay.open .modal {
  transform: scale(1);
  opacity: 1;
}

/* ——— 4.6 Modal Image Pane ———
   Full-bleed media with optional carousel arrows. */
.img-wrap {
  flex: 1 1 50%;
  position: relative;
  height: 100%;
  width: 100%;
  overflow: hidden;
  padding: 0;
  margin: 0;
  background: #000;                /* absolute black: prevents halo gaps */
}
.img-wrap img {
  width: 100%;
  height: 100%;
  object-fit: cover;               /* fill area while preserving ratio */
  display: block;
}

/* Carousel arrows (appear on hover to reduce clutter) */
.modal-arrow {
  position: absolute;
  top: 50%;
  transform: translateY(-50%);
  width: 48px;
  height: 48px;
  border-radius: 50%;
  background: rgba(0, 0, 0, 0.35);
  color: var(--color-text-contrast);
  font-size: 32px;      /* icon size */
  line-height: 1;       /* vertical centering with flex */
  display: flex;
  align-items: center;
  justify-content: center;
  cursor: pointer;
  user-select: none;
  opacity: 0;           /* hidden until user intention (hover) */
  transition:
    opacity var(--transition-med),
    transform var(--transition-med),
    box-shadow var(--transition-med),
    background var(--transition-med);
}
.img-wrap:hover .modal-arrow { opacity: 1; }
.modal-arrow:hover {
  transform: translateY(-50%) scale(1.08);
  background: rgba(0, 0, 0, 0.55);
  box-shadow: var(--shadow-arrow-hover);
}
.modal-arrow.left { left: 16px; }
.modal-arrow.right { right: 16px; }

/* ——— 4.7 Modal Content Pane ———
   Scrollable content area with fade hints (see Utilities). */
.recipe {
  flex: 1 1 50%;
  position: relative;
  display: flex;
  flex-direction: column;
  height: 100%;
  padding: clamp(18px, 2vw, 28px);
  color: var(--color-text-primary);
  overflow: hidden;     /* only inner content should scroll */
  text-align: left;
}
.recipe-content {
  flex: 1 1 auto;       /* take remaining height */
  min-height: 0;        /* critical for inner scroll to work */
  overflow-y: auto;
  padding-right: 8px;   /* avoid scrollbar overlap with text */
  -webkit-overflow-scrolling: touch;
}

/* Close button: subtle glass chip that stays discoverable */
.close-btn {
  position: absolute;
  top: 25px;
  right: 50px;
  z-index: 10;
  background: rgba(0, 0, 0, 0.3);
  backdrop-filter: blur(4px);
  padding: 6px 10px;
  border-radius: 6px;
  color: var(--color-text-contrast);
  font-size: 20px;
  border: none;
  cursor: pointer;
  transition: background var(--transition-med), transform var(--transition-med), color var(--transition-med);
}
.close-btn:hover {
  background: rgba(0, 0, 0, 0.5);
  color: var(--color-accent);
  transform: scale(1.05);
}

/* ——— 4.8 Links (Locations) ———
   Distinct hues for website vs map to convey action types. */
.location-link.website-link {
  color: var(--color-link-website);
  font-weight: 600;
  text-decoration: none;
  transition: color var(--transition-fast), text-decoration-color var(--transition-fast);
}
.location-link.map-link {
  color: var(--color-link-map);
  font-weight: 600;
  text-decoration: none;
  transition: color var(--transition-fast), text-decoration-color var(--transition-fast);
}
.location-link:hover,
.location-link:focus {
  color: var(--color-link-hover);
  text-decoration: underline;
}

/* ==========================================================================
   5) UTILITIES & RESPONSIVENESS
   --------------------------------------------------------------------------
   Helper visuals and responsive overrides for stacked modal.
   ========================================================================== */

/* Scroll fade hints (JS toggles the two opacity vars above) */
.scroll-fade {
  position: absolute;
  left: 0;
  right: 0;
  height: var(--fade-size);
  pointer-events: none;
  transition: opacity 0.2s ease;
}
.fade-top {
  top: 0;
  background: linear-gradient(to bottom, var(--fade-dark-35), transparent);
  opacity: var(--fade-top-opacity);
}
.fade-bottom {
  bottom: 0;
  background: linear-gradient(to top, var(--fade-dark-35), transparent);
  opacity: var(--fade-bottom-opacity);
}

/* Modal stacks on small screens to prioritize legibility of text. */
@media (max-width: 880px) {
  .modal {
    flex-direction: column;
    height: 90vh;
  }
  .img-wrap {
    flex: 0 0 auto;
    height: 40vh; /* allocate top section */
  }
  .recipe {
    flex: 1 1 auto; /* recipe takes remaining space */
  }
  .recipe-content {
    overflow-y: auto;
  }
}
